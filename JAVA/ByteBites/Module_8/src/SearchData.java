import java.sql.*;
import java.awt.*;
import javax.naming.spi.DirStateFactory.Result;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SearchData extends javax.swing.JFrame {
 DefaultTableModel model = new DefaultTableModel();

 Connection con;
 PreparedStatement pstmt;
 ResultSet rs;
  String columnNames[] = {"StudentID","FirstName","MiddleName","LastName","Ext Name","Course","Section"};
  String conString = "jdbc:mysql://localhost/";
  String dbname = "studentinfo";
  String dbuname ="root";
  String dbpass = "";
  String stdID,fname,lname,mname,ename,course,section;
 
  
    /**
     * Creates new form SearchData
     */
    public SearchData() {
        initComponents();
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
          //  String conString = null;
            con=DriverManager.getConnection(conString + dbname,dbuname,dbpass);
            
        }catch(SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e.getMessage(),"Error Message",JOptionPane.ERROR_MESSAGE);
            
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboOptions = new javax.swing.JComboBox<>();
        txtdata = new javax.swing.JTextField();
        txtfetch = new javax.swing.JButton();
        txtReset = new javax.swing.JButton();
        txtBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(153, 255, 255));

        cboOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "ID", "Last Name", "Course", "Section" }));

        txtdata.setColumns(15);

        txtfetch.setText("Fetch");
        txtfetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfetchActionPerformed(evt);
            }
        });

        txtReset.setText("Reset");
        txtReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResetActionPerformed(evt);
            }
        });

        txtBack.setText("Back");
        txtBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfetch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtReset, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfetch)
                    .addComponent(txtReset)
                    .addComponent(txtBack))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(280, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfetchActionPerformed
model.fireTableDataChanged();
model = new DefaultTableModel();
model.setColumnIdentifiers(columnNames);
tblData.setModel(model);
tblData.setFillsViewportHeight(true);
jScrollPane2.setViewportView(tblData);
int flag =0;
String strData = txtdata.getText();
try{
if(cboOptions.getSelectedItem().equals("All")){
pstmt = con.prepareStatement("SELECT *  FROM student;");
rs =   pstmt.executeQuery();

while(rs.next()){
  flag=1;
  stdID = rs.getString("stdID");
  fname = rs.getString("fname");
  mname=rs.getString("mname");
  lname=rs.getString("lname");
  ename=rs.getString("ename");
  course=rs.getString("course");
  section=rs.getString("section");
 //DO add your handling code here:
   
  model.addRow(new Object[]{stdID,fname,mname,lname,ename,course,section});
}
if(flag == 0){
    JOptionPane.showMessageDialog(null,"No Record Found","Error Message",JOptionPane.ERROR_MESSAGE);
}
}
else if(cboOptions.getSelectedItem().equals("Last Name")){
     pstmt = con.prepareStatement("SELECT * FROM student where lname like '%" +strData + "%';");
     rs =  pstmt.executeQuery();

     while(rs.next()){
         flag=1;
         stdID = rs.getString("stdID");
         fname = rs.getString("fname");
         mname = rs.getString("mname");
         lname = rs.getString("lname");
         ename = rs.getString("ename");
         course = rs.getString("course");
         section = rs.getString("section");
     model.addRow(new Object[]{stdID,fname,mname,lname,ename,course,section});
     }
     if(flag == 0){
    JOptionPane.showMessageDialog(null,"No Record Found","Error Message",JOptionPane.ERROR_MESSAGE);
}
}
else if(cboOptions.getSelectedItem().equals("Section")){
     pstmt = con.prepareStatement("SELECT  * FROM student where section like '%" +strData + "%';");
     rs = pstmt.executeQuery();
     
     while(rs.next()){
         flag=1;
         stdID = rs.getString("stdID");
         fname = rs.getString("fname");
         mname = rs.getString("mname");
         lname = rs.getString("lname");
         ename = rs.getString("ename");
         course = rs.getString("course");
         section = rs.getString("section");
     model.addRow(new Object[]{stdID,fname,mname,lname,ename,course,section});
     }
     if(flag == 0){
    JOptionPane.showMessageDialog(null,"No Record Found","Error Message",JOptionPane.ERROR_MESSAGE);
}
}
else if(cboOptions.getSelectedItem().equals("ID")){
     pstmt = con.prepareStatement("SELECT  * FROM student where stdID like '%" +strData + "%';");
     rs =  pstmt.executeQuery();
     
     while(rs.next()){
         flag=1;
         stdID = rs.getString("stdID");
         fname = rs.getString("fname");
         mname = rs.getString("mname");
         lname = rs.getString("lname");
         ename = rs.getString("ename");
         course = rs.getString("course");
         section = rs.getString("section");
     model.addRow(new Object[]{stdID,fname,mname,lname,ename,course,section});
     }
     if(flag == 0){
    JOptionPane.showMessageDialog(null,"No Record Found","Error Message",JOptionPane.ERROR_MESSAGE);
}
}
else if(cboOptions.getSelectedItem().equals("Course")){
     pstmt = con.prepareStatement("SELECT  * FROM student where course like '%" +strData + "%';");
     rs = pstmt.executeQuery();
     
     while(rs.next()){
         flag=1;
         stdID = rs.getString("stdID");
         fname = rs.getString("fname");
         mname = rs.getString("mname");
         lname = rs.getString("lname");
         ename = rs.getString("ename");
         course = rs.getString("course");
         section = rs.getString("section");
     model.addRow(new Object[]{stdID,fname,mname,lname,ename,course,section});
     }
     if(flag == 0){
    JOptionPane.showMessageDialog(null,"No Record Found","Error Message",JOptionPane.ERROR_MESSAGE);
}
}
//else if(cboOptions.getSelectedItem().equals("Birthdate")){
//     txtdata.setEnabled(false);
//     new Design().setVisible(true);
//     this.dispose();
     
//}
}catch(HeadlessException| SQLException e){
    JOptionPane.showMessageDialog(null,e.getMessage(),"ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);

}
    }//GEN-LAST:event_txtfetchActionPerformed

    private void txtBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBackActionPerformed
new Sample().setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_txtBackActionPerformed

    private void txtResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResetActionPerformed
txtdata.setText("");
tblData.setModel(new DefaultTableModel());// TODO add your handling code here:
    }//GEN-LAST:event_txtResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboOptions;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblData;
    private javax.swing.JButton txtBack;
    private javax.swing.JButton txtReset;
    private javax.swing.JTextField txtdata;
    private javax.swing.JButton txtfetch;
    // End of variables declaration//GEN-END:variables
}
